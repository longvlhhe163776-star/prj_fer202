
import React, { createContext, useState, useEffect } from 'react';
import axios from 'axios';


const AuthContext = createContext();

const AuthProvider = ({ children }) => {
  const [role, setRole] = useState(() => {
    // Lấy giá trị từ LocalStorage khi khởi tạo
    const savedRole = localStorage.getItem('role');
    return savedRole ? JSON.parse(savedRole) : null;
  });

  const [user, setUser] = useState(() => {
    const savedUser = localStorage.getItem('user');
    return savedUser ? JSON.parse(savedUser) : null;
  });

  // useEffect(() => {
  //   if (user) {
  //     localStorage.setItem('user', JSON.stringify(user));
  //     console.log("day la log cua context", user);
  //   } else {
  //     localStorage.removeItem('user');
  //   }
  // }, [user]);

  useEffect(() => {
    // Lưu giá trị vào LocalStorage khi role thay đổi
    if (role) {
      localStorage.setItem('role', JSON.stringify(role));
    } else {
      localStorage.removeItem('role');
    }
  }, [role]);


  const login = (role,user) => {
    setRole(role);
    setUser(user);
  };

  const logout = () => {
    setRole(null);
    setUser(null);
    localStorage.removeItem('role');
    localStorage.removeItem('user');
  };

  const register = async (userData) => {
    try {
      const response = await axios.post('http://localhost:9999/users', {
        ...userData,
        id: userData.id, // assuming id is provided or auto-generated by the backend
      });
      return response.data;
    } catch (error) {
      console.error('Registration failed', error);
      throw error;
    }
  };


  return (
    <AuthContext.Provider value={{ role, user, login, logout, register }}>
      {children}
    </AuthContext.Provider>
  );
};

export { AuthContext, AuthProvider };








